name: deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin' 

      - name: Make application-prod.yml file
        run: |
          cd ./src/main/resources
          touch application-prod.yml
          echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml
          touch application-oauth.yml
          echo "${{ secrets.APPLICATION_OAUTH }}" > application-oauth.yml
          touch application-s3.yml
          echo "${{ secrets.APPLICATION_S3 }}" > application-s3.yml
        shell: bash

      - name: Grant Execute Permission For Gradlew
        run: chmod +x ./gradlew

      - name: Build JAR
        run: ./gradlew bootJar

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build --platform=linux/amd64 -t ${{ secrets.DOCKER_IMAGE }} --push .

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            touch ./docker-compose.yml
            echo "${{ secrets.DOCKER_COMPOSE }}" > ./docker-compose.yml
            sudo docker stop $(sudo docker ps -a -q) || true
            sudo docker rm -f $(sudo docker ps -qa) || true
            sudo docker pull ${{ secrets.DOCKER_IMAGE }}
            sudo docker-compose -f docker-compose.yml up -d
            sudo docker image prune -f
